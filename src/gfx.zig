const w4 = @import("wasm4.zig");

// Graphics primitives

const BlitFlags = struct {
    flip_x: bool = false,
    flip_y: bool = false,
    rotate: bool = false,
};

const Sprite = struct {
    dbpp: bool = false,
    data: []const u8,

    const Self = @This();

    pub fn draw(self: *const Self, x: i32, y: i32, flags: BlitFlags) void {
        w4.blit(self.data.ptr, x, y, 8, 8, if (self.dbpp) w4.BLIT_2BPP else w4.BLIT_1BPP |
            if (flags.flip_x) w4.BLIT_FLIP_X else 0 |
            if (flags.flip_y) w4.BLIT_FLIP_Y else 0 |
            if (flags.rotate) w4.BLIT_ROTATE else 0);
    }
};

pub const ladder = Sprite{ .data = &[_]u8{ 0x42, 0x7e, 0x42, 0x42, 0x42, 0x7e, 0x42, 0x42 } };
pub const brick = Sprite{ .data = &[_]u8{ 0x04, 0x04, 0x04, 0xff, 0x20, 0x20, 0x20, 0xff } };
pub const rope = Sprite{ .data = &[_]u8{ 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } };
pub const brick_hard = Sprite{ .dbpp = true, .data = &[_]u8{ 0x55, 0x55, 0x00, 0x20, 0x00, 0x20, 0xaa, 0xaa, 0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0xaa, 0xaa } };
pub const gold = Sprite{ .dbpp = true, .data = &[_]u8{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xa8, 0x28, 0x4a, 0x20, 0x02, 0x2a, 0xaa, 0x00, 0x00 } };
pub const jeff = [_]Sprite{
    // Running 0, 1
    .{ .data = &[_]u8{ 0x18, 0x18, 0x12, 0x7c, 0x90, 0x28, 0x28, 0x48 } },
    .{ .data = &[_]u8{ 0x0c, 0x0c, 0x30, 0x5c, 0x12, 0x68, 0x08, 0x10 } },
    // Roping 2, 3
    .{ .data = &[_]u8{ 0x90, 0x10, 0x30, 0xe0, 0xd8, 0x14, 0x14, 0x10 } },
    .{ .data = &[_]u8{ 0x12, 0x70, 0x78, 0x10, 0x10, 0x30, 0xd0, 0x10 } },
    // Climbing 4
    .{ .data = &[_]u8{ 0x58, 0x58, 0x30, 0x1e, 0x10, 0x28, 0x48, 0x48 } },
};
pub const powder = [_]Sprite{
    .{ .data = &[_]u8{ 0x00, 0x10, 0x40, 0x0a, 0x00, 0x20, 0x04, 0x00 } },
    .{ .data = &[_]u8{ 0x88, 0x22, 0x08, 0x40, 0x12, 0x58, 0xdf, 0x00 } },
};
